/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-03-14 02:16:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class regsuccess_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("    <title>Form</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/register.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"body-container\">\r\n");
      out.write("        <div class=\"container-fluid content\">\r\n");
      out.write("            <div class=\"container\" id=\"main-container\">\r\n");
      out.write("                <div class=\"row align-items-center\">\r\n");
      out.write("                    <div class=\"col-12 col-lg-2\">\r\n");
      out.write("                        <img src=\"./images/logo.svg\" height=\"80px\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-12 col-lg-10\">\r\n");
      out.write("                        <h2 class=\"text-start mb-4\">Registration Successful</h2>\r\n");
      out.write("                        <p>Congratulations, your account has been successfully created!</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    ");

                        String userId = request.getParameter("user_id");
                        if (userId != null && !userId.trim().isEmpty()) {
                        Connection conn = null;
                        PreparedStatement pstmt = null;
                        ResultSet rs = null;
                        try {
                            // Database connection details
                            Class.forName("com.mysql.cj.jdbc.Driver");
                            String url = "jdbc:mysql://localhost:3306/xyz_solutions";
                            String dbUsername = "root";
                            String dbPassword = "";
                            conn = DriverManager.getConnection(url, dbUsername, dbPassword);

                            // SQL query to fetch user details
                            String sql = "SELECT f_name, l_name, email, phone_no FROM user WHERE user_id = ?";
                            pstmt = conn.prepareStatement(sql);
                            pstmt.setInt(1, Integer.parseInt(userId)); // Set the user_id parameter
                            rs = pstmt.executeQuery();

                            if (rs.next()) {
                                String fName = rs.getString("f_name");
                                String lName = rs.getString("l_name");
                                String email = rs.getString("email");
                                String phoneNo = rs.getString("phone_no");
                            
      out.write("\r\n");
      out.write("                            <div class=\"col\"></div>\r\n");
      out.write("                            <div class=\"col-12 col-md-8 mt-3 d-flex align-self-center\">\r\n");
      out.write("                                <table class=\"table\">\r\n");
      out.write("                                    <tbody>\r\n");
      out.write("                                        <tr>\r\n");
      out.write("                                            <th scope=\"row\">First Name</th>\r\n");
      out.write("                                            <td>\r\n");
      out.write("                                                ");
      out.print( fName != null ? fName : "Not provided" );
      out.write("\r\n");
      out.write("                                            </td>\r\n");
      out.write("                                        </tr>\r\n");
      out.write("                                        <tr>\r\n");
      out.write("                                             <th scope=\"row\">Last Name</th>\r\n");
      out.write("                                             <td>\r\n");
      out.write("                                                ");
      out.print( lName != null ? lName : "Not provided" );
      out.write("\r\n");
      out.write("                                             </td>\r\n");
      out.write("                                        </tr>\r\n");
      out.write("                                        <tr>\r\n");
      out.write("                                            <th scope=\"row\">Email</th>\r\n");
      out.write("                                            <td>\r\n");
      out.write("                                                ");
      out.print( email != null ? email : "Not provided" );
      out.write("\r\n");
      out.write("                                            </td>\r\n");
      out.write("                                        </tr>\r\n");
      out.write("                                        <tr>\r\n");
      out.write("                                            <th class=\"border-0\" scope=\"row\">Phone Number</th>\r\n");
      out.write("                                            <td class=\"border-0\">\r\n");
      out.write("                                                ");
      out.print( phoneNo != null ? phoneNo : "Not provided" );
      out.write("\r\n");
      out.write("                                            </td>\r\n");
      out.write("                                        </tr>\r\n");
      out.write("                                    </tbody>\r\n");
      out.write("                                </table>\r\n");
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"col\"></div>\r\n");
      out.write("                            ");

                                } else {
                                    out.println("<p>Error: No user registered with ID " + userId + ".</p>");
                                }
                            } catch (NumberFormatException e) {
                                out.println("<p>Error: Invalid user ID format.</p>");
                            } catch (ClassNotFoundException | SQLException e) {
                                out.println("<p>Error retrieving details: " + e.getMessage() + "</p>");
                            } finally {
                                // Clean up resources
                                if (rs != null) try { rs.close(); } catch (SQLException e) { /* ignore */ }
                                if (pstmt != null) try { pstmt.close(); } catch (SQLException e) { /* ignore */ }
                                if (conn != null) try { conn.close(); } catch (SQLException e) { /* ignore */ }
                            }
                        } else {
                            out.println("<p>Error: No user ID provided in the request.</p>");
                        }
                    
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row align-items-center\">\r\n");
      out.write("                <div class=\"col\"></div>\r\n");
      out.write("                    <div class=\"col-12 col-md-8 mt-3\">\r\n");
      out.write("                        <div class=\"auto-navigate-section\">\r\n");
      out.write("                            <p class=\"mb-2\">Redirecting in <span id=\"countdown\">15</span> seconds...</p>\r\n");
      out.write("                            <div class=\"progress\">\r\n");
      out.write("                                <div class=\"progress-bar bg-success\" role=\"progressbar\" id=\"progressBar\"\r\n");
      out.write("                                     style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-3 text-end\" id=\"submit-container\">\r\n");
      out.write("                        <a class=\"btn btn-primary mt-3\" href=\"./\">Continue</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"sub-container\">\r\n");
      out.write("            <p class=\"ps-4\">&copy; 2025 XYZ Solutions Pte. Ltd. All Rights Reserved</p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"./javascript/regsuccess.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
